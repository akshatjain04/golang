# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{url}}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "data.csv"
    fields:
      - "user_id"
      - "password"
      - "device_model_name"
      - "device_type"
      - "app_version"
      - "os_version"
      - "device_token"
      - "eso_id"
      - "subdivision_id"

scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/api/Auth/login"
          json:
            user_id: "{{ user_id }}"
            password: "{{ password }}"
            device_model_name: "{{ device_model_name }}"
            device_type: "{{ device_type }}"
            app_version: "{{ app_version }}"
            os_version: "{{ os_version }}"
            device_token: "{{ device_token }}"
            eso_id: "{{ eso_id }}"
            subdivision_id: "{{ subdivision_id }}"
          headers:
            Accept: "application/json"
          capture:
            json: "$.data"
            as: "response"
          expect:
            - statusCode: 200
            - hasProperty: "response"

  - name: "API request with validation failure"
    flow:
      - post:
          url: "/api/Auth/login"
          json:
            user_id: ""
            password: ""
            device_model_name: ""
            device_type: ""
            app_version: ""
            os_version: ""
            device_token: ""
            eso_id: ""
            subdivision_id: ""
          headers:
            Accept: "application/json"
          capture:
            json: "$.error"
            as: "error"
          expect:
            - statusCode: 400
            - hasProperty: "error"

  - name: "API request with edge case"
    flow:
      - post:
          url: "/api/Auth/login"
          json:
            user_id: "{{ long_user_id }}"
            password: "{{ special_char_password }}"
            device_model_name: "{{ long_device_model_name }}"
            device_type: "{{ special_char_device_type }}"
            app_version: "{{ large_app_version }}"
            os_version: "{{ special_char_os_version }}"
            device_token: "{{ long_device_token }}"
            eso_id: "{{ large_eso_id }}"
            subdivision_id: "{{ large_subdivision_id }}"
          headers:
            Accept: "application/json"
          capture:
            json: "$.data"
            as: "response"
          expect:
            - statusCode: 200
            - hasProperty: "response"
