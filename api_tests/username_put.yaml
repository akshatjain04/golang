# Test generated by RoostGPT for test swagger-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{ $processEnvironment.SERVER_URL }}"
  phases:
    - duration: 60
      arrivalRate: 10

scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/user/{{ $randomString() }}"
          json:
            id: "{{ $randomNumber(10) }}"
            username: "{{ $randomString(5) }}"
            firstName: "{{ $randomString(5) }}"
            lastName: "{{ $randomString(5) }}"
            email: "{{ $randomEmail() }}"
            password: "{{ $randomString(10) }}"
            phone: "{{ $randomNumber(10) }}"
            userStatus: 1
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$"
              as: "response"
          expect:
            - statusCode: 200
            - hasProperty: "response.id"

  - name: "API request with validation failure"
    flow:
      - post:
          url: "/user/{{ $randomString() }}"
          json:
            id: "{{ $randomNumber(10) }}"
            username: "{{ $randomString(5) }}"
            email: "{{ $randomEmail() }}"
            password: "{{ $randomString(10) }}"
            phone: "{{ $randomNumber(10) }}"
            userStatus: 1
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$"
              as: "response"
          expect:
            - statusCode: 400
            - hasProperty: "response.error"

  - name: "API request with edge case"
    flow:
      - post:
          url: "/user/{{ $randomString() }}"
          json:
            id: "{{ $randomNumber(10) }}"
            username: "{{ $randomString(200) }}"
            firstName: "{{ $randomString(200) }}"
            lastName: "{{ $randomString(200) }}"
            email: "{{ $randomEmail() }}"
            password: "{{ $randomString(200) }}"
            phone: "{{ $randomNumber(10) }}"
            userStatus: 1
          headers:
            Content-Type: "application/json"
          capture:
            - json: "$"
              as: "response"
          expect:
            - statusCode: "{{ $between(200, 500) }}"
            - hasProperty: "response.id"
