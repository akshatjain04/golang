# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

# RoostTestHash=354b987cbe

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "uploadImage_post_others.csv"
    fields:
      - "petId"
      - "additionalMetadata"
      - "file"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 20
  processor: "./my_processor.js"

scenarios:
  - name: "Upload Image API test"
    flow:
      - log: "Test Case 1: Request with invalid petId"
        post:
          url: "/pet/invalidId/uploadImage"
          headers:
            Authorization: "Invalid {{ $processEnvironment.AUTH_TOKEN }}"
          formData:
            additionalMetadata: "{{ additionalMetadata }}"
            file: "{{ file }}"
          expect:
            - statusCode: 400 # Expecting a Bad Request error
            - hasProperty: "message"
        think: 5

      - log: "Test Case 2: Request without additionalMetadata"
        post:
          url: "/pet/{{ petId }}/uploadImage"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          formData:
            file: "{{ file }}"
          expect:
            - statusCode: 400 # Expecting a Bad Request error
            - hasProperty: "message"
        think: 5

      - log: "Test Case 3: Request without file"
        post:
          url: "/pet/{{ petId }}/uploadImage"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          formData:
            additionalMetadata: "{{ additionalMetadata }}"
          expect:
            - statusCode: 400 # Expecting a Bad Request error
            - hasProperty: "message"
        think: 5

      - log: "Test Case 4: Authorization failure"
        post:
          url: "/pet/{{ petId }}/uploadImage"
          headers:
            Authorization: "Invalid {{ $processEnvironment.AUTH_TOKEN }}"
          formData:
            additionalMetadata: "{{ additionalMetadata }}"
            file: "{{ file }}"
          expect:
            - statusCode: 401 # Expecting an Unauthorized error
            - hasProperty: "message"
        think: 5
