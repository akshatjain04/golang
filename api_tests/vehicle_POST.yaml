# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

config:
  target: "{{url}}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "data.csv"
    fields:
      - "vehicle_id"
      - "vehicleMilleage"
      - "other"
      - "serviceDetail"
      - "detailOrProblem"
      - "date"
  processor: "./myprocessor.js"
  
scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/api/vehicle-maintenance-request"
          json:
            vehicle_id: "{{ vehicle_id }}"
            vehicleMilleage: "{{ vehicleMilleage }}"
            other: "{{ other }}"
            serviceDetail: "{{ serviceDetail }}"
            detailOrProblem: "{{ detailOrProblem }}"
            date: "{{ date }}"
          headers:
            Authorization: "{{auth}}"
            Content-Type: "application/json"
            Accept: "application/json"
          capture:
            json: "$.message"
            as: "message"
          expect:
            - statusCode: 200
            - equals:
                - "{{ message }}"
                - "Request submitted successfully"
                
  - name: "API request with validation failure"
    flow:
      - post:
          url: "/api/vehicle-maintenance-request"
          json:
            vehicle_id: ""
            vehicleMilleage: ""
            other: ""
            serviceDetail: ""
            detailOrProblem: ""
            date: ""
          headers:
            Authorization: "{{auth}}"
            Content-Type: "application/json"
            Accept: "application/json"
          capture:
            json: "$.message"
            as: "message"
          expect:
            - statusCode: 400
            - equals:
                - "{{ message }}"
                - "Validation failed"

  - name: "API request with edge case"
    flow:
      - post:
          url: "/api/vehicle-maintenance-request"
          json:
            vehicle_id: "{{ longString }}"
            vehicleMilleage: "{{ largeNumber }}"
            other: "{{ specialCharacters }}"
            serviceDetail: "{{ largeArray }}"
            detailOrProblem: "{{ longString }}"
            date: "{{ futureDate }}"
          headers:
            Authorization: "{{auth}}"
            Content-Type: "application/json"
            Accept: "application/json"
          capture:
            json: "$.message"
            as: "message"
          expect:
            - statusCode: 200
            - equals:
                - "{{ message }}"
                - "Request submitted successfully"
