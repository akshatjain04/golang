# Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

# RoostTestHash=a21296b4f6

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "pet_put_others.csv"
    fields:
      - "id"
      - "category_id"
      - "category_name"
      - "name"
      - "photoUrls"
      - "tag_id"
      - "tag_name"
      - "status"
    skipHeader: true

scenarios:
  - name: "Update an existing pet"
    flow:
      - think: 5
      - post:
          url: "/pet"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            category: 
              id: "{{ category_id }}"
              name: "{{ category_name }}"
            name: "{{ name }}"
            photoUrls: ["{{ photoUrls }}"]
            tags: 
              id: "{{ tag_id }}"
              name: "{{ tag_name }}"
            status: "{{ status }}"
          capture:
            header: "Content-Type"
            json: "$.message"
          expect:
            - statusCode: 400
            - hasProperty: "message"
          log: "Invalid payload: missing required fields"
      - think: 5
      - post:
          url: "/invalid_url"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            category: 
              id: "{{ category_id }}"
              name: "{{ category_name }}"
            name: "{{ name }}"
            photoUrls: ["{{ photoUrls }}"]
            tags: 
              id: "{{ tag_id }}"
              name: "{{ tag_name }}"
            status: "{{ status }}"
          capture:
            header: "Content-Type"
            json: "$.message"
          expect:
            - statusCode: 404
            - hasProperty: "message"
          log: "Invalid URL"
      - think: 5
      - post:
          url: "/pet"
          headers:
            Authorization: "Invalid_Token"
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            category: 
              id: "{{ category_id }}"
              name: "{{ category_name }}"
            name: "{{ name }}"
            photoUrls: ["{{ photoUrls }}"]
            tags: 
              id: "{{ tag_id }}"
              name: "{{ tag_name }}"
            status: "{{ status }}"
          capture:
            header: "Content-Type"
            json: "$.message"
          expect:
            - statusCode: 405
            - hasProperty: "message"
          log: "Invalid Authorization Token"
